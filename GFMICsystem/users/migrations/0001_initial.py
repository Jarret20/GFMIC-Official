# Generated by Django 4.1 on 2023-02-18 14:58

import datetime
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_no', models.CharField(max_length=15, unique=True, verbose_name='Event Number')),
                ('event_title', models.CharField(max_length=200, verbose_name='Event Title')),
                ('event_desc', models.CharField(max_length=200, verbose_name='Event Descriptions')),
                ('event_time_start', models.CharField(max_length=20, verbose_name='Event Time Start')),
                ('event_time_end', models.CharField(max_length=20, verbose_name='Event Time End')),
                ('event_date', models.DateField()),
                ('event_amount', models.IntegerField(default=0, null=True)),
                ('event_link', models.CharField(max_length=200, null=True, verbose_name='Zoom link')),
                ('event_evaluate', models.CharField(max_length=200, verbose_name='Evaluate')),
                ('event_category', models.CharField(max_length=200, verbose_name='Event Category')),
                ('event_image', models.FileField(upload_to=users.models.event_image_path)),
                ('event_speaker', models.CharField(max_length=200, verbose_name='Event Speaker')),
                ('event_status', models.CharField(default='PENDING', max_length=16, verbose_name='Status')),
                ('event_datecreated', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
                ('event_dateupdated', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_no', models.CharField(max_length=15, unique=True, verbose_name='User Number')),
                ('user_email', models.EmailField(max_length=200, unique=True, verbose_name='Email Address')),
                ('user_password', models.CharField(max_length=16, verbose_name='Password')),
                ('user_sub', models.CharField(default='GUEST', max_length=16, verbose_name='Subscription')),
                ('user_status', models.CharField(default='ACTIVE', max_length=16, verbose_name='Status')),
                ('user_application', models.CharField(max_length=16, null=True, verbose_name='User Application')),
                ('user_pmode', models.CharField(max_length=16, null=True, verbose_name='User Payment')),
                ('user_amount', models.IntegerField(null=True)),
                ('user_validity', models.DateTimeField(max_length=50, null=True)),
                ('user_expire', models.DateTimeField(max_length=50, null=True)),
                ('user_lname', models.CharField(max_length=50, null=True, verbose_name='Last Name')),
                ('user_fname', models.CharField(max_length=50, null=True, verbose_name='First Name')),
                ('user_mname', models.CharField(max_length=50, null=True, verbose_name='Middle Name')),
                ('user_sname', models.CharField(max_length=50, null=True, verbose_name='Suffix Name')),
                ('user_mobile', models.BigIntegerField(null=True, verbose_name='Mobile Number')),
                ('user_file', models.FileField(blank=True, null=True, upload_to=users.models.image_path)),
                ('user_dateupdated', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
                ('user_datecreated', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
                ('user_address', models.CharField(max_length=50, null=True, verbose_name='Address')),
                ('user_agency', models.CharField(max_length=50, null=True, verbose_name='Agency')),
                ('user_post', models.CharField(max_length=50, null=True, verbose_name='Educational')),
                ('user_school', models.CharField(max_length=50, null=True, verbose_name='School Name')),
                ('user_approver', models.CharField(max_length=50, null=True, verbose_name='Approver Name')),
            ],
        ),
        migrations.CreateModel(
            name='register_event',
            fields=[
                ('reg_event_id', models.AutoField(primary_key=True, serialize=False)),
                ('reg_event_no', models.CharField(max_length=15, null=True, unique=True, verbose_name='Event Payment Number')),
                ('reg_event_approver', models.CharField(max_length=200, null=True, verbose_name='Event Payment Approver')),
                ('reg_payment_amount', models.IntegerField(default=0, null=True)),
                ('reg_proof_payment', models.FileField(null=True, upload_to=users.models.event_image_path)),
                ('reg_pmode', models.CharField(max_length=16, null=True, verbose_name='Event Payment')),
                ('reg_payment_status', models.CharField(default='PENDING', max_length=16, verbose_name='Event Payment')),
                ('reg_payment_date', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
                ('reg_ev_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.event')),
                ('reg_member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.membership')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='event_associate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.membership'),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('cert_id', models.AutoField(primary_key=True, serialize=False)),
                ('cert_no', models.CharField(max_length=200, verbose_name='Certificate Number')),
                ('cert_status', models.CharField(default='PENDING', max_length=16, verbose_name='Status')),
                ('cert_datecreated', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
                ('cert_dateupdated', models.DateTimeField(default=datetime.datetime(2023, 2, 18, 14, 58, 33, 791273, tzinfo=datetime.timezone.utc))),
                ('cert_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.event')),
                ('cert_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.membership')),
            ],
        ),
    ]
